[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project]
name = "policy-pilot"
version = "0.1.0"
description = "A policy analysis and search platform"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Policy Pilot Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "streamlit==1.34.0",
    "sentence-transformers==3.4.1",
    "opensearch-py==2.3.1",
    "requests==2.32.2",
    "PyPDF2==3.0.1",
    "python-docx==0.8.11",
    "pytesseract==0.3.10",
    "Pillow==10.3.0",
    "python-multipart==0.0.9",
    "fastapi==0.110.1",
    "uvicorn==0.30.0",
    "pandas==2.2.1",
    "numpy==1.26.4",
    "scikit-learn==1.5.0",
    "torch==2.2.2",
    "transformers==4.52.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "httpx>=0.24.0",
    "requests>=2.32.0",
]

[project.urls]
Homepage = "https://github.com/your-username/policy-pilot"
Repository = "https://github.com/your-username/policy-pilot"
Issues = "https://github.com/your-username/policy-pilot/issues"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["policy_pilot"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
