version: '3.8'

services:
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: policy-pilot-opensearch-prod
    environment:
      - discovery.type=single-node
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_SECURITY_PLUGIN=true
      - OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_PASSWORD:-admin123}"
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
      - ./opensearch/config:/usr/share/opensearch/config
    networks:
      - policy-pilot-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    container_name: policy-pilot-dashboards-prod
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - "5601:5601"
    depends_on:
      opensearch:
        condition: service_healthy
    networks:
      - policy-pilot-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  policy-pilot-api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: policy-pilot-api-prod
    environment:
      - ENVIRONMENT=production
      - OPENSEARCH_URL=http://opensearch:9200
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - CORS_ORIGINS=${CORS_ORIGINS:-["http://localhost:3000"]}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_HOST=0.0.0.0
      - API_PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
    depends_on:
      opensearch:
        condition: service_healthy
    networks:
      - policy-pilot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  nginx:
    image: nginx:alpine
    container_name: policy-pilot-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - policy-pilot-api
    networks:
      - policy-pilot-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: policy-pilot-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - policy-pilot-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru

volumes:
  opensearch_data:
    driver: local
  redis_data:
    driver: local

networks:
  policy-pilot-network:
    driver: bridge