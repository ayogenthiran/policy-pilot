# Policy Pilot RAG Backend Environment Configuration
# Copy this file to .env and update the values for your environment

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
# Environment name (development, staging, production)
ENVIRONMENT=development

# =============================================================================
# API CONFIGURATION
# =============================================================================
# API server host and port
API_HOST=0.0.0.0
API_PORT=8000

# CORS origins for frontend integration (JSON array format)
CORS_ORIGINS=["http://localhost:3000", "http://localhost:3001"\]

# =============================================================================
# OPENAI CONFIGURATION
# =============================================================================
# OpenAI API key (required for GPT integration)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# OpenAI model to use for text generation
# Options: gpt-4o-mini, gpt-4o, gpt-3.5-turbo
OPENAI_MODEL=gpt-4o-mini

# =============================================================================
# OPENSEARCH CONFIGURATION
# =============================================================================
# OpenSearch server URL
# For local development with Docker: http://localhost:9200
# For Docker Compose: http://opensearch:9200
OPENSEARCH_URL=http://localhost:9200

# OpenSearch index name for document storage
OPENSEARCH_INDEX=policy_documents

# OpenSearch authentication (optional)
# OPENSEARCH_USERNAME=admin
# OPENSEARCH_PASSWORD=admin

# =============================================================================
# DOCUMENT PROCESSING SETTINGS
# =============================================================================
# Maximum file size in bytes (default: 10MB)
MAX_FILE_SIZE=10485760

# Text chunk size for processing (default: 1000 characters)
CHUNK_SIZE=1000

# Overlap between text chunks (default: 200 characters)
CHUNK_OVERLAP=200

# =============================================================================
# EMBEDDING MODEL CONFIGURATION
# =============================================================================
# Sentence transformer model for embeddings
# Options: sentence-transformers/all-mpnet-base-v2, sentence-transformers/all-MiniLM-L6-v2
EMBEDDING_MODEL=sentence-transformers/all-mpnet-base-v2

# =============================================================================
# FILE STORAGE SETTINGS
# =============================================================================
# Directory for uploaded files
UPLOAD_DIR=uploads

# Directory for processed data
DATA_DIR=data

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path
LOG_FILE=logs/policy_pilot.log

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Enable debug mode (true/false)
DEBUG=true

# Enable auto-reload for development (true/false)
AUTO_RELOAD=true

# =============================================================================
# PRODUCTION SETTINGS (uncomment for production)
# =============================================================================
# DEBUG=false
# AUTO_RELOAD=false
# LOG_LEVEL=WARNING
# CORS_ORIGINS=["https://yourdomain.com"]

# =============================================================================
# DOCKER SETTINGS
# =============================================================================
# Docker Compose project name
COMPOSE_PROJECT_NAME=policy-pilot

# =============================================================================
# MONITORING AND HEALTH CHECKS
# =============================================================================
# Health check timeout in seconds
HEALTH_CHECK_TIMEOUT=30

# Service startup timeout in seconds
STARTUP_TIMEOUT=60

# =============================================================================
# SECURITY SETTINGS (for production)
# =============================================================================
# Secret key for JWT tokens (if implementing authentication)
# SECRET_KEY=your_secret_key_here

# JWT token expiration time in hours
# JWT_EXPIRATION_HOURS=24

# =============================================================================
# CACHING SETTINGS (optional)
# =============================================================================
# Redis URL for caching (if using Redis)
# REDIS_URL=redis://localhost:6379/0

# Cache TTL in seconds
# CACHE_TTL=3600

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Update the values above with your actual configuration
#
# 3. For OpenAI integration, get your API key from:
#    https://platform.openai.com/api-keys
#
# 4. For local development with Docker Compose:
#    docker-compose up -d
#
# 5. Run the setup script to initialize the system:
#    python scripts/setup.py
#
# 6. Start the API server:
#    python src/main.py
#
# 7. Access the API documentation at:
#    http://localhost:8000/docs
